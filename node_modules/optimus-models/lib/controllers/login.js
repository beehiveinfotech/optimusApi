'use strict'
module.exports.login = (req, res, next) => {
    let options = req.headers.options
        , db = options.db
        , emailaddress = req.body.emailaddress
        , pwd = req.body.pwd
        , logintype = req.body.logintype
        , jwt = require('jsonwebtoken')
        , secret = "optimus@dev"
        , emailconfig = require('../../../../config/emailsend.js')
        , response = {
            'success': false,
            'message': ''

        }
        , token = ''
    console.log('The body is', req.body)

    let _generateToken = (emailaddress_val) => {
        return new Promise((resolve, reject) => {
            let token = jwt.sign({ emailaddress: emailaddress_val }, secret, {
                expiresIn: "90d" // expires in NINTY_DAYS
            })
            resolve(token)
        })
    }
    let _updateNewGeneratedTokenInDataBase = (emailaddress_val, new_token) => {
        return new Promise((resolve, reject) => {
            db.query('select get_user_verify_otp($1,$2,$3,$4)', [emailaddress_val, '', 'UPDATE_NEW_TOKEN', new_token], (err, result) => {
                if (err) {
                    console.log('Error', err)
                    reject(null)
                } else {
                    resolve(result)
                }
            })
        })
    }

    return new Promise((resolve, reject) => {
        db.query('select get_user_signin($1,$2,$3)', [emailaddress, pwd, logintype], (err, finalresult) => {
            if (err) {
                console.log('The Error', err)
                response['success'] = false
                response['message'] = 'Error in Operation'
                return reject(response)

            } else {
                //console.log('the row value', finalresult.rows[0].get_user_signin)
                response['success'] = true
                response['message'] = 'Data Fetched'
                token = finalresult.rows[0].get_user_signin[0].usertoken
                console.log('User Toekn', token)
                if (token) {
                    jwt.verify(token, secret, (error, jwtresult) => {
                        console.log('verify JWT error', error)
                        console.log('verify result', jwtresult)
                        if (error) {

                            _generateToken(emailaddress).then(returntoken => {
                                //onsole.log('The Generated Token Is', returntoken)
                                _updateNewGeneratedTokenInDataBase(emailaddress, returntoken).then(result => {
                                    //console.log('The Generated Token Is', result)
                                    finalresult.rows[0].get_user_signin[0].usertoken = returntoken
                                    response['data'] = finalresult.rows[0].get_user_signin[0]
                                    return resolve(response)

                                })
                            })


                        } else {
                            response['data'] = finalresult.rows[0].get_user_signin[0]
                            return resolve(response)

                        }
                    })
                } else {
                    response['success'] = false
                    response['data'] = finalresult.rows[0].get_user_signin[0]
                    response['message'] = finalresult.rows[0].get_user_signin[0].msg
                    return resolve(response)
                }
            }

        })
    }).then(response => {
        res.status(200).json(response)
    }).catch(error => {
        res.status(200).json(response)
    })

}