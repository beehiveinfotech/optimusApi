'use strict'
module.exports.verifyuserotp=(req,res,next)=>{
    let options = req.headers.options
    ,db = options.db
    ,emailopt = req.body.emailotp   
    ,emailaddress = req.body.emailaddress
    ,operationtype = req.body.operationtype 
    ,tokenval = req.body.tokenval 
    , emailconfig = require('../../../../config/emailsend.js')
   ,response = {
    'success':false,
    'message':''     
   
   }
   , jwt = require('jsonwebtoken')
   , secret = "optimus@dev"
   let _generateToken = (emailaddress_val) => {
      return new Promise((resolve, reject) => {
          let token = jwt.sign({ emailaddress: emailaddress_val }, secret, {
              expiresIn: "90d" // expires in NINTY_DAYS
          })
          resolve(token)
      })
  
  }
  let _updateTokenInDataBase = (emailaddress_val,emailopt,token) => {
   return new Promise((resolve, reject) => {       
       db.query('select get_user_verify_otp($1,$2,$3,$4)',[emailaddress_val,emailopt,'UPDATE_TOKEN',token], (err, result) => {
           if (err) {
               console.log('Error',err)
               reject(null)
           } else {               
               resolve(result)
           }
       })
   })
}
let _sendWelcomeEmail = (emailaddress_val,notificationtype) => {
    return new Promise((resolve, reject) => {       
        db.query('select get_email_template($1,$2)',[emailaddress_val,notificationtype], (err, result) => {
            if (err) {
                console.log('Error',err)
                reject(null)
            } else {               
                resolve(result)
            }
        })
    })
 }
   console.log('The body is',req.body)

    return new Promise((resolve,reject)=>{
    db.query('select get_user_verify_otp($1,$2,$3,$4)',[emailaddress,emailopt,operationtype,tokenval], (err, result) => {
         if(err){
            console.log('The Error',err)
            response['success']= false
            response['message'] = 'Error in Operation'
            return reject(response)

         }else{           
           
            if(result.rows[0].get_user_verify_otp == 'true'){
                console.log('The Result from function call',result.rows[0].get_user_verify_otp)
               _generateToken(emailaddress).then(token => {
                  console.log('The Generated Token Is', token)
                  _updateTokenInDataBase(emailaddress,emailopt,token).then(result => {
                     console.log('The Generated Token Is', result)

                     _sendWelcomeEmail(emailaddress,'WelcomeEmail').then(result=>{
                        if(!result){
                           console.log('Email Not Send')
                        }else{
                            console.log('the row value',result.rows[0].get_email_template[0])
                            emailconfig(emailaddress, result.rows[0].get_email_template[0].emailsubject, result.rows[0].get_email_template[0].emailbody)
                        }
                     })

                     response['success']= true
                     response['message'] = 'OTP verified successfully!'
                     response['data'] = result.rows[0].get_user_verify_otp
                     response['token'] = token
                     return resolve(response)
                  })
               })
            }else{
                     response['success']= false
                     response['message'] = 'Worng OTP!!'
                     response['data'] = 'Worng OTP!!',
                     response['token'] = ''
                     return resolve(response)
            }
           
         }
    })
   }).then(response=>{
    res.status(200).json(response)
   }).catch(error=>{
    res.status(200).json(response)
   })

}